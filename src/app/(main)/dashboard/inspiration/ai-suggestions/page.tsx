"use client";

import { useState } from "react";

import { Sparkles, RefreshCw, Filter, TrendingUp, Clock, Users, Copy } from "lucide-react";

import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";

const aiSuggestions = [
  {
    id: 1,
    title: "Morning Routines That Actually Work",
    description: "Share 5 realistic morning habits that busy people can actually stick to",
    category: "Lifestyle",
    difficulty: "Easy",
    trending: true,
    estimatedViews: "12-25K",
    platform: "TikTok",
  },
  {
    id: 2,
    title: "The Psychology of Color in Content",
    description: "How different colors affect engagement and what this means for creators",
    category: "Educational",
    difficulty: "Medium",
    trending: false,
    estimatedViews: "8-15K",
    platform: "Instagram",
  },
  {
    id: 3,
    title: "My Biggest Failure Led to Success",
    description: "Turn your setbacks into powerful storytelling content",
    category: "Personal",
    difficulty: "Easy",
    trending: true,
    estimatedViews: "20-40K",
    platform: "TikTok",
  },
  {
    id: 4,
    title: "Behind the Scenes: Content Creation",
    description: "Show the real process of creating viral content",
    category: "Behind-the-Scenes",
    difficulty: "Easy",
    trending: false,
    estimatedViews: "6-12K",
    platform: "Instagram",
  },
  {
    id: 5,
    title: "3 Editing Mistakes Everyone Makes",
    description: "Common editing errors that kill engagement and how to fix them",
    category: "Educational",
    difficulty: "Medium",
    trending: true,
    estimatedViews: "15-30K",
    platform: "TikTok",
  },
  {
    id: 6,
    title: "The 1% Rule for Content Growth",
    description: "Small daily improvements that compound into massive results",
    category: "Growth",
    difficulty: "Medium",
    trending: false,
    estimatedViews: "10-20K",
    platform: "Instagram",
  },
];

const categories = ["All", "Lifestyle", "Educational", "Personal", "Behind-the-Scenes", "Growth"];

export default function AISuggestionsPage() {
  const [selectedCategory, setSelectedCategory] = useState("All");
  const [isRefreshing, setIsRefreshing] = useState(false);

  const filteredSuggestions =
    selectedCategory === "All"
      ? aiSuggestions
      : aiSuggestions.filter((suggestion) => suggestion.category === selectedCategory);

  const handleRefresh = () => {
    setIsRefreshing(true);
    setTimeout(() => {
      setIsRefreshing(false);
    }, 1500);
  };

  const handleUseIdea = (suggestion: any) => {
    // Pre-fill the new script form with this idea
    const encodedTitle = encodeURIComponent(suggestion.title);
    const encodedDescription = encodeURIComponent(suggestion.description);
    window.location.href = `/dashboard/new-script?title=${encodedTitle}&description=${encodedDescription}`;
  };

  const handleCopyIdea = (suggestion: any) => {
    const text = `${suggestion.title}\n\n${suggestion.description}`;
    navigator.clipboard.writeText(text);
    alert("Idea copied to clipboard!");
  };

  return (
    <div className="@container/main flex flex-col gap-4 md:gap-6">
      <div className="flex items-center justify-between">
        <div className="flex flex-col gap-2">
          <h1 className="text-2xl font-bold tracking-tight">AI Suggestions</h1>
          <p className="text-muted-foreground">Discover fresh video ideas generated by AI to spark your creativity.</p>
        </div>
        <div className="flex gap-2">
          <DropdownMenu>
            <DropdownMenuTrigger asChild>
              <Button variant="outline" size="sm">
                <Filter className="mr-2 h-4 w-4" />
                {selectedCategory}
              </Button>
            </DropdownMenuTrigger>
            <DropdownMenuContent>
              {categories.map((category) => (
                <DropdownMenuItem key={category} onClick={() => setSelectedCategory(category)}>
                  {category}
                </DropdownMenuItem>
              ))}
            </DropdownMenuContent>
          </DropdownMenu>

          <Button onClick={handleRefresh} disabled={isRefreshing}>
            <RefreshCw className={`mr-2 h-4 w-4 ${isRefreshing ? "animate-spin" : ""}`} />
            Refresh Ideas
          </Button>
        </div>
      </div>

      {/* Stats */}
      <div className="grid grid-cols-1 gap-4 @md/main:grid-cols-3">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Ideas Generated</CardTitle>
            <Sparkles className="text-muted-foreground h-4 w-4" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{filteredSuggestions.length}</div>
            <p className="text-muted-foreground text-xs">Fresh ideas ready to use</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Trending Ideas</CardTitle>
            <TrendingUp className="text-muted-foreground h-4 w-4" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{filteredSuggestions.filter((s) => s.trending).length}</div>
            <p className="text-muted-foreground text-xs">High potential for virality</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Ideas Used</CardTitle>
            <Clock className="text-muted-foreground h-4 w-4" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">8</div>
            <p className="text-muted-foreground text-xs">This month</p>
          </CardContent>
        </Card>
      </div>

      {/* Ideas Grid */}
      <div className="grid grid-cols-1 gap-4 @md/main:grid-cols-2 @5xl/main:grid-cols-3">
        {filteredSuggestions.map((suggestion) => (
          <Card key={suggestion.id} className="group transition-shadow hover:shadow-md">
            <CardHeader className="pb-3">
              <div className="flex items-start justify-between">
                <div className="flex-1">
                  <div className="mb-2 flex items-center gap-2">
                    <Badge variant="outline">{suggestion.category}</Badge>
                    {suggestion.trending && (
                      <Badge variant="secondary" className="bg-orange-100 text-orange-800">
                        <TrendingUp className="mr-1 h-3 w-3" />
                        Trending
                      </Badge>
                    )}
                  </div>
                  <CardTitle className="text-base leading-tight">{suggestion.title}</CardTitle>
                </div>
              </div>
            </CardHeader>
            <CardContent className="space-y-4">
              <p className="text-muted-foreground line-clamp-3 text-sm">{suggestion.description}</p>

              <div className="text-muted-foreground flex items-center justify-between text-xs">
                <div className="flex items-center gap-1">
                  <Users className="h-3 w-3" />
                  {suggestion.estimatedViews}
                </div>
                <Badge variant="outline" className="text-xs">
                  {suggestion.platform}
                </Badge>
              </div>

              <div className="flex items-center gap-2 pt-2">
                <Button size="sm" className="flex-1" onClick={() => handleUseIdea(suggestion)}>
                  <Sparkles className="mr-2 h-3 w-3" />
                  Use Idea
                </Button>
                <Button variant="outline" size="sm" onClick={() => handleCopyIdea(suggestion)}>
                  <Copy className="h-3 w-3" />
                </Button>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>
    </div>
  );
}
